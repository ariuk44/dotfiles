" Of course
set nocompatible

if exists('cliclick')
	source ~/.vim/robot_plugins.vim
else
	source ~/.vim/plugins.vim
endif

command! -nargs=+ Silent execute 'silent <args>' | redraw!

syntax on
syntax enable

" Book mode
function BookMode()
	set formatoptions+=w
	set colorcolumn=80
	set textwidth=80
	hi ColorColumn ctermfg=123 ctermbg=234
endfunction

" General settings
scriptencoding utf8
set encoding=utf8
set showmatch
set visualbell
set backspace=indent,eol,start
set mouse=a

set nofoldenable    " disable folding

" Automaticaly word wrap and insert new line
set textwidth=0
set nowrap

set cursorline
set cursorcolumn
"set colorcolumn=81

set hlsearch
set smartcase
set ignorecase
set incsearch

set autoindent
set noexpandtab
set smarttab
set smartindent
set tabstop=4
set softtabstop=4
set shiftwidth=4

" Syntastic
let g:syntastic_cpp_compiler_options = ' -std=c++11'

" Some settings
"set list extends:>,precedes:<

" Invisible character symbol
set listchars=tab:▸\ ,eol:⏎
"set showbreak=➤
set showbreak=…

" let configs
"let mapleader=","

" Airline
set t_Co=256
set laststatus=2
let g:airline_powerline_fonts = 1
"let g:airline#extensions#branch#enabled=1
"let g:airline#extensions#hunks#enabled=0

"let g:airline_theme="badwolf"
"let g:airline_section_b = '%{strftime("%c")}'
"let g:airline#extensions#tabline#enabled=1
"let g:airline#extensions#tabline#left_sep=' '
"let g:airline#extensions#tabline#left_alt_sep='|'


" Load custom settings
source ~/.vim/variables.vim
source ~/.vim/functions.vim
source ~/.vim/startup/autocmd.vim
source ~/.vim/startup/mappings.vim
source ~/.vim/startup/color.vim

" filetype on after load startup
if has("autocmd")
	" Enable filetype detection
	filetype plugin on
	"filetype plugin indent on

	" Automatically apply any changes in vimrc
	"autocmd BufWritePost .vimrc tabe $MYVIMRC
endif

" My settings
set hidden

" Vertical window split on right side
set splitright

" I use more more modern way to loss data, I use GIT
set nobackup
set noswapfile

" correction
iabbr ture true
iabbr flase false
iabbr fasle false
iabbr recieve receive
iabbr cleant client

if has("gui_running")
	source ~/.vim/gvimrc
endif

let g:ycm_global_ycm_extra_conf = '~/.ycm_extra_conf.py'
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:ycm_key_invoke_completion = '<C-Space>'

"let g:clang_use_library = 1
"let g:clang_library_path = '/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libclang.dylib'
"let g:clang_complete_auto = 1
"let g:clang_snippets = 1
"let g:clang_snippets_engine = 'ultisnips'
"let g:clang_complete_macros = 1
"let g:clang_user_options = ' -DCLANG_COMPLETE_ONLY'

" If you prefer the Omni-Completion tip window to close when a selection is
" made, these lines close it on movement in insert mode or when leaving
" insert mode
autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"

let g:SuperTabDefaultCompletionType = '<C-n>'

